{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red108\green122\blue122;\red255\green255\blue255;\red210\green220\blue220;
\red183\green111\blue179;\red111\green193\blue194;\red237\green137\blue17;\red22\green146\blue150;}
{\*\expandedcolortbl;;\cssrgb\c49870\c54972\c55302;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c85484\c89016\c88909;
\cssrgb\c77331\c52624\c75301;\cssrgb\c49914\c79742\c80464;\cssrgb\c95041\c60853\c6616;\cssrgb\c4821\c63301\c65256;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /*************************************************** \cf4 \strokec4 \
\cf2 \strokec2   This is an example for the LTR390 UV Sensor\cf4 \strokec4 \
\
\cf2 \strokec2   Designed specifically to work with the LTR390 UV sensor from Adafruit\cf4 \strokec4 \
\cf2 \strokec2   ----> https://www.adafruit.com\cf4 \strokec4 \
\
\cf2 \strokec2   These sensors use I2C to communicate, 2 pins are required to  \cf4 \strokec4 \
\cf2 \strokec2   interface\cf4 \strokec4 \
\cf2 \strokec2  ****************************************************/\cf4 \strokec4 \
 \
\pard\pardeftab720\partightenfactor0
\cf5 \strokec5 #include\cf4 \strokec4  \cf6 \strokec6 "Adafruit_LTR390.h"\cf4 \strokec4 \
\
Adafruit_LTR390 ltr = \cf7 \strokec7 Adafruit_LTR390\cf4 \strokec4 ();\
\pard\pardeftab720\partightenfactor0
\cf8 \strokec8 bool\cf4 \strokec4  key = \cf6 \strokec6 false\cf4 \strokec4 ;\
\
\cf8 \strokec8 void\cf4 \strokec4  \cf7 \strokec7 setup\cf4 \strokec4 () \{\
  \cf6 \strokec6 2\cf4 \strokec4 \
  \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 begin\cf4 \strokec4 (\cf6 \strokec6 115200\cf4 \strokec4 );\
  \cf5 \strokec5 while\cf4 \strokec4  (!Serial)\{\
\
  \}\
  \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "Adafruit LTR-390 test"\cf4 \strokec4 );\
\
  \cf5 \strokec5 if\cf4 \strokec4  ( ! \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 begin\cf4 \strokec4 () ) \{\
    \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "Couldn't find LTR sensor!"\cf4 \strokec4 );\
    \cf5 \strokec5 while\cf4 \strokec4  (\cf6 \strokec6 1\cf4 \strokec4 ) \cf7 \strokec7 delay\cf4 \strokec4 (\cf6 \strokec6 10\cf4 \strokec4 );\
  \}\
  \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "Found LTR sensor!"\cf4 \strokec4 );\
\
  \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 setMode\cf4 \strokec4 (LTR390_MODE_UVS);\
  \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 getMode\cf4 \strokec4 () == LTR390_MODE_ALS) \{\
    \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "In ALS mode"\cf4 \strokec4 );\
  \} \cf5 \strokec5 else\cf4 \strokec4  \{\
    \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "In UVS mode"\cf4 \strokec4 );\
  \}\
\
  \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 setGain\cf4 \strokec4 (LTR390_GAIN_3);\
  \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 "Gain : "\cf4 \strokec4 );\
  \cf5 \strokec5 switch\cf4 \strokec4  (\cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 getGain\cf4 \strokec4 ()) \{\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_GAIN_1: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 1\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_GAIN_3: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 3\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_GAIN_6: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 6\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_GAIN_9: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 9\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_GAIN_18: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 18\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
  \}\
\
  \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 setResolution\cf4 \strokec4 (LTR390_RESOLUTION_16BIT);\
  \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 "Resolution : "\cf4 \strokec4 );\
  \cf5 \strokec5 switch\cf4 \strokec4  (\cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 getResolution\cf4 \strokec4 ()) \{\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_13BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 13\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_16BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 16\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_17BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 17\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_18BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 18\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_19BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 19\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
    \cf5 \strokec5 case\cf4 \strokec4  LTR390_RESOLUTION_20BIT: \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 20\cf4 \strokec4 ); \cf5 \strokec5 break\cf4 \strokec4 ;\
  \}\
\
  \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 setThresholds\cf4 \strokec4 (\cf6 \strokec6 100\cf4 \strokec4 , \cf6 \strokec6 1000\cf4 \strokec4 );\
  \cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 configInterrupt\cf4 \strokec4 (\cf6 \strokec6 true\cf4 \strokec4 , LTR390_MODE_UVS);\
  key = \cf6 \strokec6 true\cf4 \strokec4 ;\
  \
  \
\}\
\
\cf8 \strokec8 void\cf4 \strokec4  \cf7 \strokec7 loop\cf4 \strokec4 () \{\
  \cf7 \strokec7 delay\cf4 \strokec4 (\cf6 \strokec6 10000\cf4 \strokec4 );\
 \
  \cf5 \strokec5 if\cf4 \strokec4  (\cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 newDataAvailable\cf4 \strokec4 ()) \{\
      \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf6 \strokec6 "UV data: "\cf4 \strokec4 ); \
      \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf7 \strokec7 ltr\cf4 \strokec4 .\cf7 \strokec7 readUVS\cf4 \strokec4 ());\
      \cf7 \strokec7 delay\cf4 \strokec4 (\cf6 \strokec6 1000\cf4 \strokec4 );\
  \}\
  \
  \cf7 \strokec7 delay\cf4 \strokec4 (\cf6 \strokec6 100\cf4 \strokec4 );\
\}\
}